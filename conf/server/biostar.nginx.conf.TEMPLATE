upstream biostar_server {

    server unix:/tmp/biostar.sock fail_timeout=0;
    # For a TCP configuration:
    # server example.com:8000 fail_timeout=0;
}

# When no server names match then crash out.
server {
   return 404;
}


server {
    client_max_body_size 5M;
    server_name %DOMAIN_NAME%;

    keepalive_timeout 25s;

    # Path for static files.
    root %LIVE_DIR%/export/;

    access_log %LIVE_DIR%/logs/nginx-access.log;
    error_log %LIVE_DIR%/logs/nginx-error.log;

    location = /favicon.ico {
        alias    %LIVE_DIR%/export/static/favicon.ico;
    }
    location = /apple-touch-icon.png {
        alias    %LIVE_DIR%/export/static/apple-touch-icon.png;
    }

    location = /favicon-32x32.png {
        alias    %LIVE_DIR%/export/static/favicon-32x32.png;
    }

    location = /favicon-16x16.png {
        alias    %LIVE_DIR%/export/static/favicon-16x16.png;
    }

    location = /site.webmanifest {
        alias    %LIVE_DIR%/export/static/site.webmanifest;
    }

    location = /safari-pinned-tab.svg {
        alias    %LIVE_DIR%/export/static/safari-pinned-tab.svg;
    }

    location = /sitemap.xml {
        alias    %LIVE_DIR%/export/static/sitemap.xml;
    }

    location = /robots.txt {
        alias    %LIVE_DIR%/export/static/robots.txt;
    }

    location /static/ {
        autoindex on;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public";
        access_log off;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://biostar_server;
        proxy_buffering off;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/%DOMAIN_NAME%/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/%DOMAIN_NAME%/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = %DOMAIN_NAME%) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name %DOMAIN_NAME%;
    return 404; # managed by Certbot


}
